#!/bin/bash

source "${PWD}/config"

# prompt character
#
# returns a '#' if the user is logged in
# as root, a '$' otherwise
cpnt_promptchar() {
    [ $(id -u) = 0 ] \
      && echo "${promptchar[prefix]} ${promptchar[root_icon]} ${promptchar[suffix]}" \
      || echo "${promptchar[prefix]} ${promptchar[user_icon]} ${promptchar[suffix]}"
}

# literal string
#
# returns whatever argument(s) are passed
# to it, including parameter expansion
# and escape sequences. if no arguments 
# are passed then it returns nothing
cpnt_literal() {
    echo -e "${@}"
}

# current background job count
#
# returns the amount of currently running
# background jobs
cpnt_jobcount() {
    echo "$(jobs -p | wc -l)"
}

# username
#
# returns the username of the current user
# of the shell session
cpnt_username() {
    echo "$(whoami)"
}

# system uptime
#
# returns a formatted string representing
# the amount of time the system has been active
cpnt_uptime() {
    echo "$(uptime -p):3"
}

# formatted long date
#
# returns a formatted string representing
# the current date in the form ''
cpnt_longdate() {
    echo "$(date)"
}

# short date (US format)
#
# returns a formatted string representing
# the current date in the US form 'MM/DD/YYYY'
cpnt_shortdate_us() {
    echo "$(date +%D)"
}

# short date (UK format)
#
# returns a formatted string representing
# the current date in the UK form 'DD/MM/YYYY'
cpnt_shortdate_uk() {
    echo "$(date +%d/%m/%Y)"
}

# 24 hour time
#
# returns a formatted string representing
# the current time in military (24 hour) format
# with am / pm appended depending on the time
cpnt_time() {
    echo "$(date +%X)"
}

# 12 hour time
#
# returns a formatted string representing
# the current time in standard (12 hour) format
cpnt_time24() {
    echo "$(date "+%I:%M:%S %#p")"
}

# exit code of last command ran
#
# returns the exit code of the last 
# command that was run
cpnt_exitstatus() {
    echo ${?}
}

# character depending on the exit code of last command ran
#
# returns the character given at '$1' if the exit code 
# of the last command that was run wsa 0. returns the
# character given at '$2' if the exit code is anything else
cpnt_exitstatus_char() {
    [ ${?} = 0 ] && echo -e "${1}" || echo -e "${2}" 
}

# current working directory
#
# returns the full path of the current working directory
cpnt_pwd() {
    echo "${PWD}"
}

# abbreviated current working directory
#
# returns the full path of the current working directory
# with '$HOME' being abbreviated to '~'
cpnt_shortpwd() {
    echo "${PWD/#$HOME/\~}"
}

